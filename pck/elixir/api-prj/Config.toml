[Config]
#         dirname[...][0], filenames[...][1], filecontent[...][...]
dirtree = [["config", "config.exs",
          '''
          import Config

          config :#{prjname}, ecto_repos: [#{prjname.fcuc}.Repo]

          config :#{prjname}, #{prjname.fcuc}.Repo,
          database: "example",
          username: "postgres",
          password: "postgres",
          hostname: "localhost",
          port: "5432"
          '''
          ],
          ["lib", "application.ex",
          ''' 
          defmodule #{prjname.fcuc}.Application do

          use Application

          @impl true
          def start(_type, _args) do
              children = [
                #{prjname.fcuc}.Repo,
              ]

              opts = [strategy: :one_for_one, name: #{prjname.fcuc}.Supervisor]
              Supervisor.start_link(children, opts)
          end

          end 
          '''
          ],
          ["lib", "repo.ex",
          '''
          defmodule #{prjname.fcuc}.Repo do
             use Ecto.Repo,
             otp_app: :#{prjname},
             adapter: Ecto.Adapters.Postgres
          end
          '''
          ],
          ["lib", "#{prjname}.ex",
          '''
          defmodule Wsup do
             use Plug.Router
             import Plug.Conn
             require Logger
             alias Wsup.{User, Repo}

             plug :match
             plug Plug.Parsers,
                  parsers: [:urlencoded, :multipart, :json],
                  pass: ["*/*"],
                  json_decoder: Jason

             plug Plug.Logger, log: :debug
             plug :dispatch


             get "/hello" do
                 send_resp(conn, 200, "<h1>Hello, world!</h1>")
             end

             get "/hello/:name" do
                 send_resp(conn, 200, "hello, #{name}")
             end

             match _ do
                 send_resp(conn, 404, "oops")
             end

             def start do
                 Plug.Adapters.Cowboy.http Wsup, [], port: 8080
             end

             def stop do
                 Plug.Adapters.Cowboy.shutdown Wsup.HTTP
             end
          end
          '''
          ],
          [".", "mix.exs",
          '''
          defmodule #{prjname.fcuc}.MixProject do
             use Mix.Project

             def project do
              [
               app: :#{prjname},
               version: "0.1.0",
               elixir: "~> 1.12",
               start_permanent: Mix.env() == :prod,
               deps: deps()
              ]
             end

            def application do
             [
              mod: {Wsup.Application, []},
              extra_applications: [:plug_cowboy, :logger]
             ]
            end

            defp deps do
             [
              {:plug_cowboy, "~> 2.0"},
              {:jason, "~> 1.3"},
              {:ecto_sql, "~> 3.6"},
              {:postgrex, ">= 0.0.0"},
       
             ]
            end
          end
          '''
          ]
          ]